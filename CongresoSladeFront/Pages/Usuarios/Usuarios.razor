@page "/Participantes"
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json
@using Npgsql
@using CongresoServer.DTOs.Response;
@inject ApplicationDbContext _DbContext
@inject ISnackbar Snackbar
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject UserManager<IdentityUser> _userManager
@inject NavigationManager _NavigationManager
<PageTitle>Participantes - SLADE</PageTitle>
<MudText Typo="Typo.h5" Color="MudBlazor.Color.Primary" Class="mb-4">Participantes</MudText>
<MudGrid>
    <MudItem xs="8" sm="8" md="9">

    </MudItem>
    <MudItem xs="4" sm="4" md="3">
        <MudButton Variant="Variant.Filled" OnClick="RegistrarNuevoUsuario" Color="Color.Success">Registrar Participante</MudButton>
    </MudItem>
</MudGrid>
<MudGrid>
    <MudItem xs="12" sm="12" md="12">
        <MudCard Style="height:100%;">
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12" sm="12" md="12">
                        <MudTable T="Model.UserViewModel" Items="@UserVM.OrderBy(p=>p.Rol)" Hover="true" Breakpoint="Breakpoint.Sm">
                            @*                            <ToolBarContent>
                            <MudSpacer />
                            <MudTextField T="string" ValueChanged="@(s=>OnSearch(s))" Placeholder="Buscar" Adornment="Adornment.Start"
                            AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                            </ToolBarContent>*@
                            <HeaderContent>
                                <MudTh>Nombre</MudTh>
                                <MudTh>Email</MudTh>
                                <MudTh>Procedencia</MudTh>
                                <MudTh></MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Nombre">@context.Nombre</MudTd>
                                <MudTd DataLabel="Email">@context.Email</MudTd>
                                <MudTd DataLabel="Rol">@context.Rol</MudTd>
                                <MudTd DataLabel=""><MudButton Variant="Variant.Filled" OnClick="()=>EditarRegistroUsuario(context)" Color="Color.Primary">Editar</MudButton></MudTd>
                            </RowTemplate>
                        </MudTable>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

@code {
    public Evento Evento { get; set; }
    public Area Area { get; set; }
    public List<RegistrosViewModel> ParticipantesRegistrados { get; set; }
    public Guid ParticipanteId { get; set; }
    public bool ExisteRegistro { get; set; }
    public Registro Registro { get; set; }
    public string QRCodeSr { get; set; }
    private string searchString = null;
    public bool loading = true;
    public List<UserViewModel>? UserVM { get; set; }

    public ApiResponse<Participante> ApiResponseParticipante { get; set; } = new ApiResponse<Participante>();
    protected override async Task OnInitializedAsync()
    {
        UserVM = new List<UserViewModel>();
        using var client = new HttpClient();
        var response = await client.GetAsync("https://localhost:7047/api/Participante/select");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            ApiResponseParticipante = JsonConvert.DeserializeObject<ApiResponse<Participante>>(content);
            foreach (var participante in ApiResponseParticipante.data)
            {
                var item = new UserViewModel
                    {
                        Email = participante.Email,
                        // Rol = dr[2].ToString(),
                        Nombre = participante.Nombre,
                        ParticipanteId = participante.Id,
                        // Id = dr[0].ToString()
                    };

                UserVM.Add(item);
            }
            loading = false;
            await InvokeAsync(StateHasChanged);
        }
    }

    private void EditarRegistroUsuario(UserViewModel userVM)
    {
        _NavigationManager.NavigateTo($"/Perfil/{userVM.Id}");
    }

    private void RegistrarNuevoUsuario()
    {
        _NavigationManager.NavigateTo($"/Perfil/NuevoUsuario");
    }

}
