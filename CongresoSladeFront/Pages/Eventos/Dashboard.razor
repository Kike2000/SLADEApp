@page "/"
@page "/Agenda"
@using CongresoServer.DTOs.Response;
@using CongresoServer.Model
@using Newtonsoft.Json;
@using NexLead.Pages.Admin.Lead
@inject ApplicationDbContext _DbContext
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject NavigationManager _NavigationManager
@inject IDialogService DialogService

<style>
    #Regresar {
        display: none !important;
    }
</style>
<PageTitle>Agenda - SLADE</PageTitle>
@attribute [Authorize]
@if (loading)
{
    <p>Loading...</p>
}
else
{
    <AuthorizeView>
        @if (@context.User.Identity.IsAuthenticated)
        {
            <MudGrid>
                <MudItem xs="8" sm="8" md="9">
                </MudItem>
            </MudGrid>
            <MudGrid>
                <MudItem xs="12" sm="12" md="12">
                    <MudCard Style="height:100%;border-color:#F2BC40; border-width: thin;">
                        <MudCardHeader Style="background-color:#F2BC40">
                            <CardHeaderContent>
                                <div class="d-flex justify-center">
                                    <MudText Typo="Typo.h4" Color="MudBlazor.Color.Inherit"><b>Agenda del Congreso</b></MudText>
                                </div>
                            </CardHeaderContent>
                        </MudCardHeader>
                        <MudCardContent Class="px-0 ml-2">
                            <MudTreeView T="string">
                                <MudText Class="ml-3" Typo="Typo.h6">Eventos</MudText>
                                <MudTreeViewItem Expanded=true Value="@("Gran Salón Vallarta")">
                                    @foreach (var item in ApiResponseEvento.data)
                                    {
                                        <MudTreeViewItem Class="cursor-pointer" OnClick="(e)=>InfoEvento(item.Id.ToString())" Value="@item.Nombre" />
                                    }
                                </MudTreeViewItem>
                            </MudTreeView>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
            </MudGrid>
        }
    </AuthorizeView>
}
@code {
    public ApiResponse<Evento> ApiResponseEvento { get; set; } = new ApiResponse<Evento>();
    public List<Evento> Eventos { get; set; } = new List<Evento>();
    public List<Registro> Registros { get; set; }
    public Model.Participante Participante { get; set; }
    public List<EventoViewModel> EventoVMDia1 { get; set; }
    public List<EventoViewModel> EventoVMDia2 { get; set; }
    public List<EventoViewModel> EventoVMDia3 { get; set; }
    private TreeItemData ActivatedValue { get; set; }
    public bool disabled { get; set; } = false;
    private HashSet<TreeItemData> SelectedValues { get; set; }
    private bool loading = true;
    private HashSet<TreeItemData> TreeItems { get; set; } = new HashSet<TreeItemData>();

    public class TreeItemData
    {
        public string Title { get; set; }

        public string Icon { get; set; }

        public int? Number { get; set; }

        public bool IsExpanded { get; set; }

        public HashSet<TreeItemData> TreeItems { get; set; }

        public TreeItemData(string title, string icon, int? number = null)
        {
            Title = title;
            Icon = icon;
            Number = number;
        }
    }
    public async Task InfoEvento(string e)
    {
        var authState = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        if (!authState.User.IsInRole("Administrator"))
        {
            _NavigationManager.NavigateTo($"/Eventos/Detalles/{e}", forceLoad: true);
        }
        else
        {
            _NavigationManager.NavigateTo($"/Administrador/Eventos/Detalles/{e}", forceLoad: true);
        }
    }
    protected override async Task OnInitializedAsync()
    {
        // var registros = _DbContext.Registro.Where(p => p.Asistencia).ToList();
        // var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        // var current = authstate.User.Identity.Name;
        // Participante = _DbContext.Participante.FirstOrDefault(p => p.Email == current);
        EventoVMDia1 = new List<EventoViewModel>();
        EventoVMDia2 = new List<EventoViewModel>();
        EventoVMDia3 = new List<EventoViewModel>();
        using var client = new HttpClient();
        var response = await client.GetAsync("https://localhost:7047/api/Evento/select");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            ApiResponseEvento = JsonConvert.DeserializeObject<ApiResponse<Evento>>(content);
            // Process the content as needed
            // ...

            // Update the UI if necessary
            loading = false;
            await InvokeAsync(StateHasChanged);
        }

        // Deserialize the wrapper object

        // foreach (var item in eventos.Where(p => p.HoraInicio.Value.Day.Equals(27) && p.HoraInicio.Value.Month.Equals(10)).OrderBy(p => p.HoraInicio))
        // {
        //     var area = _DbContext.Area.FirstOrDefault(p => p.Id == item.AreaId);
        //     var eventoDia1 = new EventoViewModel
        //         {
        //             Nombre = item.Nombre,
        //             Texto = $"{item.HoraInicio.Value.Hour}:{item.HoraInicio.Value.Minute.ToString("00")} - {item.HoraTermino.Value.Hour}:{item.HoraTermino.Value.Minute.ToString("00")}  {item.Nombre}",
        //             Lugar = area.Nombre,
        //             Id = item.Id
        //         };
        //     if (Participante != null)
        //     {
        //         bool registro = _DbContext.Registro.Any(p => p.EventoId == item.Id && p.ParticipanteId == Participante.Id);
        //         if (registro)
        //         {
        //             eventoDia1.BackgroundColor = "#F17B6F";
        //             eventoDia1.Color = "white";
        //         }
        //         else
        //         {
        //             eventoDia1.BackgroundColor = "transparent";
        //             eventoDia1.Color = "dodgerblue";
        //         }
        //     }
        //     EventoVMDia1.Add(eventoDia1);
        // }
        // foreach (var item in eventos.Where(p => p.HoraInicio.Value.Day.Equals(28) && p.HoraInicio.Value.Month.Equals(10)).OrderBy(p => p.HoraInicio))
        // {
        //     var area = _DbContext.Area.FirstOrDefault(p => p.Id == item.AreaId);
        //     var eventoDia2 = new EventoViewModel
        //         {
        //             Nombre = item.Nombre,
        //             Texto = $"{item.HoraInicio.Value.Hour}:{item.HoraInicio.Value.Minute.ToString("00")} - {item.HoraTermino.Value.Hour}:{item.HoraTermino.Value.Minute.ToString("00")}  {item.Nombre}",
        //             Lugar = area.Nombre,
        //             Id = item.Id
        //         };
        //     if (Participante != null)
        //     {
        //         bool registro = _DbContext.Registro.Any(p => p.EventoId == item.Id && p.ParticipanteId == Participante.Id);
        //         if (registro)
        //         {
        //             eventoDia2.BackgroundColor = "#F17B6F";
        //             eventoDia2.Color = "white";
        //         }
        //         else
        //         {
        //             eventoDia2.BackgroundColor = "transparent";
        //             eventoDia2.Color = "dodgerblue";
        //         }
        //     }
        //     EventoVMDia2.Add(eventoDia2);
        // }
        // foreach (var item in eventos.Where(p => p.HoraInicio.Value.Day.Equals(29) && p.HoraInicio.Value.Month.Equals(10)).OrderBy(p => p.HoraInicio))
        // {
        //     var area = _DbContext.Area.FirstOrDefault(p => p.Id == item.AreaId);
        //     var eventoDia3 = new EventoViewModel
        //         {
        //             Nombre = item.Nombre,
        //             Texto = $"{item.HoraInicio.Value.Hour}:{item.HoraInicio.Value.Minute.ToString("00")} - {item.HoraTermino.Value.Hour}:{item.HoraTermino.Value.Minute.ToString("00")}  {item.Nombre}",
        //             Lugar = area.Nombre,
        //             Id = item.Id
        //         };
        //     if (Participante != null)
        //     {
        //         bool registro = _DbContext.Registro.Any(p => p.EventoId == item.Id && p.ParticipanteId == Participante.Id);
        //         if (registro)
        //         {
        //             eventoDia3.BackgroundColor = "#F17B6F";
        //             eventoDia3.Color = "white";
        //         }
        //         else
        //         {
        //             eventoDia3.BackgroundColor = "transparent";
        //             eventoDia3.Color = "dodgerblue";
        //         }
        //     }
        //     EventoVMDia3.Add(eventoDia3);
        // }

        // if (_DbContext.Evento.Any(p => p.AgendaAbierta == false))
        // {
        //     disabled = true;
        // }
    }

    private async Task ReabrirOCerrar()
    {
        var eventos = _DbContext.Evento.ToList();
        foreach (var item in eventos)
        {
            item.AgendaAbierta = false;
            _DbContext.Evento.Update(item);
        }
        disabled = true;
        await _DbContext.SaveChangesAsync();
    }

    public async Task OpenDialog(string mesa)
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var parameters = new DialogParameters();
        if (mesa.Contains("1"))
        {
            parameters.Add("Mesa", "Mesa1");
        }
        else if (mesa.Contains("2"))
        {
            parameters.Add("Mesa", "Mesa2");
        }
        else if (mesa.Contains("3"))
        {
            parameters.Add("Mesa", "Mesa3");
        }
        else if (mesa.Contains("4"))
        {
            parameters.Add("Mesa", "Mesa4");
        }
        var result = DialogService.Show<Dialogs>("Conferencias Asociadas a la Mesa", parameters, options);
        var final = await result.Result;
    }
}