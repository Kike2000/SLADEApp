@page "/Lugares"
@using CongresoServer.DTOs.Response;
@using Microsoft.AspNetCore.Identity
@using Newtonsoft.Json;
@inject ApplicationDbContext _DbContext
@inject ISnackbar Snackbar
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@inject UserManager<IdentityUser> _userManager
@inject NavigationManager _NavigationManager

<PageTitle>Lugares - SLADE</PageTitle>
@if (loading)
{
    <p>Loading...</p>
}
else
{
    <MudText Typo="Typo.h5" Color="MudBlazor.Color.Primary" Class="mb-4">Lugares</MudText>
    <MudGrid>
        <MudItem xs="8" sm="8" md="9">

        </MudItem>
        <MudItem xs="4" sm="4" md="3">
            <MudButton Variant="Variant.Filled" OnClick="RegistrarNuevoEvento" Color="Color.Success">Registrar Lugar</MudButton>
        </MudItem>
    </MudGrid>
    <MudGrid>
        <MudItem xs="12" sm="12" md="12">
            <MudCard Style="height:100%;">
                <MudCardContent>
                    <MudGrid>
                        <MudItem xs="12" sm="12" md="12">
                            <MudTable T="Model.Area" Items="@ApiResponseArea.data.OrderBy(p=>p.Nombre)" Hover="true" Breakpoint="Breakpoint.Sm">
                                <HeaderContent>
                                    <MudTh>Nombre</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Nombre"><MudLink Href="@($"/Lugares/Editar/{@context.Id}")">@context.Nombre</MudLink></MudTd>
                                </RowTemplate>
                            </MudTable>
                        </MudItem>
                    </MudGrid>
                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
}
@code {
    public List<Area> Areas { get; set; }
    public ApiResponse<Area> ApiResponseArea { get; set; } = new ApiResponse<Area>();
    public bool loading = true;
    protected override async Task OnInitializedAsync()
    {
        using var client = new HttpClient();
        var response = await client.GetAsync("https://localhost:7047/api/Area/select");
        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            ApiResponseArea = JsonConvert.DeserializeObject<ApiResponse<Area>>(content);
            // Process the content as needed
            // ...

            // Update the UI if necessary
            loading = false;
            await InvokeAsync(StateHasChanged);
        }
    }

    private void RegistrarNuevoEvento()
    {
        _NavigationManager.NavigateTo($"/Lugares/Crear");
    }

}
